<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Panel de Estado y Actualización de Firmware</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; background: #f7f7f7; }
    h1, h2 { color: #333; }
    table { width: 100%; border-collapse: collapse; margin-bottom: 20px; background: #fff; }
    th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }
    th { background-color: #eee; }
    .online { color: green; font-weight: bold; }
    .offline { color: red; font-weight: bold; }
    #logs { border: 1px solid #ccc; padding: 10px; height: 300px; overflow-y: scroll; background: #eaeaea; }
    form { background: #fff; padding: 20px; border: 1px solid #ccc; margin-bottom: 20px; }
    label { display: block; margin-bottom: 5px; font-weight: bold; }
    input, select { width: 100%; padding: 8px; margin-bottom: 15px; }
    button { padding: 10px 15px; background: #007BFF; color: #fff; border: none; cursor: pointer; }
    button:hover { background: #0056b3; }
  </style>
</head>
<body>
  <h1>Estado de Dispositivos ESP32</h1>
  <table>
    <thead>
      <tr>
        <th>MAC</th>
        <th>Nombre</th>
        <th>Estado</th>
        <th>Versión</th>
        <th>Último Visto</th>
        <th>Salud</th>
      </tr>
    </thead>
    <tbody id="devicesTable">
      <% for (let mac in devices) { %>
        <tr id="device-<%= mac %>">
          <td><%= mac %></td>
          <td><%= devices[mac].name %></td>
          <td class="<%= devices[mac].status === 'online' ? 'online' : 'offline' %>">
            <%= devices[mac].status %>
          </td>
          <td><%= devices[mac].version %></td>
          <td>
            <% if (devices[mac].lastSeen) { %>
              <%= new Date(devices[mac].lastSeen).toLocaleString('es-AR') %>
            <% } %>
          </td>
          <td><%= devices[mac].health %></td>
        </tr>
      <% } %>
    </tbody>
  </table>

  <h2>Actualizar Firmware vía OTA</h2>
  <form id="firmwareForm" enctype="multipart/form-data">
    <label for="deviceId">Selecciona el dispositivo:</label>
    <select name="deviceId" id="deviceId">
      <option value="all">Todos</option>
      <% Object.keys(devices).forEach(function(mac) { %>
        <option value="<%= mac %>"><%= mac %> - <%= devices[mac].name %></option>
      <% }); %>
    </select>
    
    <label for="firmware">Selecciona el firmware (.bin):</label>
    <input type="file" name="firmware" id="firmware" accept=".bin" required>
    
    <button type="submit">Actualizar Firmware</button>
  </form>

  <h2>Logs de Depuración</h2>
  <div id="logs">
    <% logs.forEach(function(log) { %>
      <p><%= log %></p>
    <% }) %>
  </div>

  <!-- Socket.IO -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const devicesTable = document.getElementById('devicesTable');
    const logsDiv = document.getElementById('logs');

    // Actualizar la tabla de dispositivos al recibir nuevos datos
    socket.on('devices', function(devices) {
      devicesTable.innerHTML = "";
      for (let mac in devices) {
        const device = devices[mac];
        const row = document.createElement('tr');
        row.id = 'device-' + mac;
        row.innerHTML = `
          <td>${mac}</td>
          <td>${device.name || ""}</td>
          <td class="${device.status === 'online' ? 'online' : 'offline'}">${device.status}</td>
          <td>${device.version || ""}</td>
          <td>${device.lastSeen ? new Date(device.lastSeen).toLocaleString('es-AR') : ""}</td>
          <td>${device.health || ""}</td>
        `;
        devicesTable.appendChild(row);
      }
    });

    // Agregar nuevos logs conforme se reciben
    socket.on('log', function(message) {
      const p = document.createElement('p');
      p.textContent = message;
      logsDiv.appendChild(p);
      logsDiv.scrollTop = logsDiv.scrollHeight;
    });

    socket.on('logs', function(logs) {
      logsDiv.innerHTML = "";
      logs.forEach(function(log) {
        const p = document.createElement('p');
        p.textContent = log;
        logsDiv.appendChild(p);
      });
    });

    // Manejar el submit del formulario de firmware vía AJAX
    const firmwareForm = document.getElementById('firmwareForm');
    firmwareForm.addEventListener('submit', function(e) {
      e.preventDefault(); // Prevenir la acción por defecto (recargar la página)
      const formData = new FormData(firmwareForm);
      fetch('/update-firmware', {
        method: 'POST',
        body: formData
      })
      .then(response => response.text())
      .then(result => {
        // Puedes emitir un log o notificar al usuario
        socket.emit('log', `Respuesta del servidor: ${result}`);
      })
      .catch(error => {
        socket.emit('log', `Error al enviar firmware: ${error}`);
      });
    });
  </script>
</body>
</html>
